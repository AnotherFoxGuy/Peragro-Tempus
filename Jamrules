if ! $(BUILDTOP)
{
BUILDTOP = . ;
}

# Include configuration.
JAMCONFIG ?= $(BUILDTOP)/Jamconfig ;
include $(JAMCONFIG) ;

# Set up compiler flags.
# Unfortunately, we can not use FDefines here since Boost Jam does not have it,
# and we have not yet included mk/jam/build.jam which provides an emulation
# layer for Boost.  We can not include build.jam earlier because these flags
# need to be defined before build.jam is included.  :-(
COMPILER.CFLAGS.optimize += -Wall ;
COMPILER.CFLAGS.debug += -DCS_DEBUG -Wall ;
COMPILER.CFLAGS.profile += -g3 -pg -Wall ;
COMPILER.LFLAGS.profile += -g3 -pg ;

# Include CS build rules
include $(TOP)/mk/jam/build.jam ;



## CsLibAddFiles files, reparent
##   Convenience rule for use by subdirectories of this directory and their
##   children.  Adds raw filenames from `files' to the master crystalspace.lib
##   target.  `reparent' is a list of tokens representing the relative path
##   from this directory down to the child directory.
rule CsLibAddFiles
{
  local files = $(1) ;
  local reparent = [ ConcatDirs $(2) ] ;
  SOURCES += $(files:R=$(reparent)) ;
}

## CsLibAddWild patterns, reparent, [ rejects ]
##   Convenience rule for use by subdirectories of this directory and their
##   children.  Performs a wildcard for sources on behalf of the directory.
##   Adds all discovered files to the master crystalspace.lib target.
##   `patterns' is a list of wildcard patterns to fuel the search.  `reparent'
##   is a list of tokens representing the relative path from this directory
##   down to the child directory.  `rejects' is a list of files (rooted at this
##   directory) which should not be given citizenship in crystalspace.lib.
rule CsLibAddWild
{
  local patterns = $(1) ;
  local reparent = $(2) ;
  local rejects = $(3) ;

  local files = [ Wildcard $(patterns) ] ;
  if $(rejects)
  {
    files = [ Filter $(files) : $(rejects) ] ;
  }
  CsLibAddFiles $(files) : $(reparent) ;
}

## CsLibAddModule [ rejects ]
##   Convenience rule for use by subdirectories of this directory and their
##   children.  Performs a wildcard for sources on behalf of the directory, and
##   for a like-named directory in the public header tree. Adds all discovered
##   files to the master crystalspace.lib target. Most child directories can
##   simply invoke this rule with no arguments in order to become citizens of
##   crystalspace.lib. `rejects' is a list of files (rooted at this directory)
##   which should not be given citizenship in crystalspace.lib. If the child
##   directory contains a unit-testing subdirectory named `t/', then it is
##   incorporated into the unit tests for the master crystalspace.lib.
rule AddSourceFiles
{
  local rejects = $(1) ;
  local modname = [ StripCommon $(SUBDIR_TOKENS) : $(CSLIB.ROOT) ] ;
  local incbase = $(DOTDOT) include $(modname) ;
  local srcpat = *.c *.cc *.cpp *.cxx *.C *.m *.mm *.M ;
  local incpat = *.h *.hpp *.hxx *.H ;

  CsLibAddWild $(srcpat) $(incpat) : $(modname) : $(rejects) ;
  ## CsLibAddTestDirs t : $(modname) ;

  local oldsubdir = $(SUBDIR_TOKENS) ;
  SubDir TOP include $(modname) ;
  CsLibAddWild $(incpat) : $(incbase) : $(rejects) ;
  SubDir TOP $(oldsubdir) ;
}

