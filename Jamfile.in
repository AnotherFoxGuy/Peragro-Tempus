TOP ?= "@top_srcdir@" ;
BUILDTOP ?= "@top_builddir@" ;

SubDir TOP ;

IncludeDir ;
IncludeDir src ;
IncludeDir $(BUILDTOP) : : literal transient ;

CleanDir clean :
    out ;
Clean distclean :
    aclocal.m4
    config.h
    config.h.in~
    config.log
    config.status
    config.status.lineno
    config.cache
    configure.lineno
    Jamconfig
    Jamfile ;
CleanDir distclean :
    autom4te.cache ;
Depends distclean : clean ;

Clean maintainerclean :
  config.h.in
  configure ;
Depends maintainerclean : distclean ;

Help distclean : "Remove built targets and configuration" ;
Help maintainerclean :
    "Remove built targets, configuration, and generated files." ;

MsvcGenSubDir TOP msvc 7 : 7 ;
MsvcGenSubDir TOP msvc 71 : 71 ;
MsvcGenSubDir TOP msvc 8 : 8 ;
MsvcGenTemplateDir TOP mk msvcgen ;
# What the typical user will need. Presently, everything but static.
MsvcGenWorkspace all : : "grp.+_(?!typical$)" static ;
# Workspace for static variants of plugins and apps.
MsvcGenWorkspace static : static ^lib.* : "grp.+_(?!typical$)" ;
MsvcGenConfig MSVCGEN.WELL_KNOWN_GROUPS_REGISTERED : yes ;

local hash = "\$" ;
MsvcGenConfig CRYSTAL.AVAILABLE : yes ;
MsvcGenConfig CRYSTAL.DEFINES ;
MsvcGenConfig CRYSTAL.CFLAGS : "" ;
MsvcGenConfig CRYSTAL.LFLAGS : "" ;
MsvcGenConfig CRYSTAL.LIBS : "libcrystalspace.lib" ;
MsvcGenConfig CRYSTAL.LIBS.DEBUG : "libcrystalspace_d.lib" ;
MsvcGenConfig CRYSTAL.INCDIRS :
  [ ConcatDirs .. .. .. CS include ]
  [ ConcatDirs "$(hash)(CRYSTAL)" include ]
  [ ConcatDirs "$(hash)(CRYSTAL)" include crystalspace ] ;
  [ ConcatDirs "$(hash)(CRYSTAL)" include csutil win32 ] ;
MsvcGenConfig CRYSTAL.LIBDIRS :
  [ ConcatDirs .. .. .. CS out release$(MSVC_VERSION) libs ]
  [ ConcatDirs .. .. .. CS libs csutil win32 libs ]
  [ ConcatDirs "$(hash)(CRYSTAL)" out release$(MSVC_VERSION) libs ]
  [ ConcatDirs "$(hash)(CRYSTAL)" libs ]
  [ ConcatDirs "$(hash)(CRYSTAL)" libs csutil win32 libs ] ;
MsvcGenConfig CRYSTAL.LIBDIRS.DEBUG :
  [ ConcatDirs .. .. .. CS out debug$(MSVC_VERSION) libs ]
  [ ConcatDirs .. .. .. CS libs csutil win32 libs ]
  [ ConcatDirs "$(hash)(CRYSTAL)" out debug$(MSVC_VERSION) libs ]
  [ ConcatDirs "$(hash)(CRYSTAL)" libs ]
  [ ConcatDirs "$(hash)(CRYSTAL)" libs csutil win32 libs ] ;

MsvcGenConfig CEL.AVAILABLE : yes ;
MsvcGenConfig CEL.DEFINES : USE_CEL ;
MsvcGenConfig CEL.CFLAGS : "" ;
MsvcGenConfig CEL.LFLAGS : "" ;
MsvcGenConfig CEL.LIBS : "libceltool.lib" ;
MsvcGenConfig CEL.LIBS.DEBUG : "libceltool_d.lib" ;
MsvcGenConfig CEL.INCDIRS :
  [ ConcatDirs .. .. .. cel include ]
  [ ConcatDirs "$(hash)(CEL)" include ]
  [ ConcatDirs "$(hash)(CEL)" include cel ] ;
MsvcGenConfig CEL.LIBDIRS :
  [ ConcatDirs .. .. .. cel out release libs ]
  [ ConcatDirs "$(hash)(CEL)" out release$(MSVC_VERSION) libs ]
  [ ConcatDirs "$(hash)(CEL)" libs ] ;
MsvcGenConfig CEL.LIBDIRS.DEBUG :
  [ ConcatDirs .. .. .. cel out debug libs ]
  [ ConcatDirs "$(hash)(CEL)" out debug libs ]
  [ ConcatDirs "$(hash)(CEL)" libs ] ;

MsvcGenConfig CEGUI.AVAILABLE : yes ;
MsvcGenConfig CEGUI.CFLAGS : "" ;
MsvcGenConfig CEGUI.LFLAGS : "" ;
MsvcGenConfig CEGUI.LIBS : "CEGUIBase.lib CEGUIFalagardBase.lib" ;
MsvcGenConfig CEGUI.LIBS.DEBUG : "CEGUIBase_d.lib CEGUIFalagardBase_d.lib" ;

MsvcGenConfig PTHREAD.CFLAGS : "" ;
MsvcGenConfig PTHREAD.LFLAGS : "" ;

# Set project-specific compiler and linker options for msvcgen.
#MsvcDefine MY_DEFINE : "my value" ;
#MsvcDefine MY_RELEASE_DEFINE : "my release value" : release ;
#MsvcDefine MY_DEBUG_DEFINE : "my debug value" : debug ;
#MsvcCFlags : "/I \"my\\inc\\path\"" : release ;
#MsvcCFlags : "/I \"my\\debuginc\\path\"" : debug ;
#MsvcLFlags : "/libpath:\"my\\lib\\path\"" : release ;
#MsvcLFlags : "/libpath:\"my\\debuglib\\path\"" : debug ;
#MsvcGenConfig MSVC.LIBRARY : supercool.lib ;
#MsvcGenConfig MSVC.LIBRARY_DEBUG : supercooldebug.lib ;

SubInclude TOP src ;
