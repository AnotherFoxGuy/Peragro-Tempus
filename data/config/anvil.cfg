; NB1: An entry in the plug-in list looks like this:
;
; System.Plugins.InterfaceName[.additional] = PluginName
;
; The InterfaceName should be the same as the main interface
; that is implemented by this plugin (if any). If this plugin doesn't
; implement a specific interface (like BugPlug) then just use a logical
; name that is different from all other interfaces.
; If you use 'Systems.Plugins.InterfaceName' then this plugin will
; be marked as the default plugin implementing that interface in the
; object registry. This means that you can do CS_QUERY_REGISTRY (object_reg,
; InterfaceName) to find this plugin.
; If you use 'Systems.Plugins.InterfaceName.bla' then this plugin will
; be registered using the tag 'InterfaceName.bla' in the object registry.
; This is usually used for secondary plugins.
;
; Here are a few common interfaces:
;
; iVFS           the virtual file system
; iGraphics3D    standard graphics output
; iSoundRender   standard sound output
; iConsoleOutput the output console
; iEngine        the 3d engine
; iImageIO       the image loader
; iLoader        the level loader
;
;
; NB2: a specific driver can be omitted, if it is not used.
; For example, if you just omit the sound renderer, you will
; simply hear no sound, but the program will still run
;
; NB3: Plugins will be loaded in the same order they are listed
; here. This means that if, for example, a plugin needs the video
; driver during his initialization, it should come *after*
; video driver in the following section. Unless the plugin has a
; specific dependency in his registry.

; First of all, the Virtual File System plug-in
System.Plugins.iVFS = crystalspace.kernel.vfs

; Video driver
;System.Plugins.iGraphics3D = crystalspace.graphics3d.software.offscreen
;System.Plugins.iGraphics3D = crystalspace.graphics3d.software
System.Plugins.iGraphics3D = crystalspace.graphics3d.opengl
;System.Plugins.iGraphics3D = crystalspace.graphics3d.line

; The console
System.Plugins.iConsoleInput = crystalspace.console.input.standard
System.Plugins.iConsoleOutput = crystalspace.console.output.simple
;System.Plugins.iConsoleOutput = crystalspace.console.output.standard
;System.Plugins.iConsoleOutput = crystalspace.console.output.fancy

; Sound renderer
System.Plugins.iSoundRender = crystalspace.sound.render.software
;System.Plugins.iSoundRender = crystalspace.sound.render.ds3d

; Image Loader
System.Plugins.iImageIO = crystalspace.graphic.image.io.multiplexer

; Level Loader
System.Plugins.iLoader = crystalspace.level.loader
;System.Plugins.iDocumentSystem = crystalspace.documentsystem.xmlread
System.Plugins.iDocumentSystem = crystalspace.documentsystem.multiplexer
System.Plugins.iDocumentSystem.1 = crystalspace.documentsystem.xmlread
System.Plugins.iDocumentSystem.2 = crystalspace.documentsystem.binary 

; Sound Loader
System.Plugins.iSoundLoader = crystalspace.sound.loader.multiplexer

; Now the Engine (csWorld) plug-in
System.Plugins.iEngine = crystalspace.engine.3d

; Additional plugins come here
;System.Plugins.iScript = crystalspace.script.python

; Collision detection
System.Plugins.iCollideSystem = crystalspace.collisiondetection.opcode

; CEGUI wrapper
System.Plugins.iCEGUI = crystalspace.cegui.wrapper

; CEL plugins
System.Plugins.iCelPlLayer = cel.physicallayer
;System.Plugins.iCelBlLayer = cel.behaviourlayer.test
;System.Plugins.iCelPersistence = cel.persistence.xml

;System.Plugins.iModelConverter = crystalspace.modelconverter.multiplexer
;System.Plugins.iCrossBuilder = crystalspace.mesh.crossbuilder

;System.Plugins.iBugPlug = crystalspace.utilities.bugplug

; The font plexer provides support to use multiple font servers at once
; (e.g. so you can use both TrueType and CS' default fonts) as well as
; functionality to take glyphs from multiple fonts.
; If we want to use the font multiplexer, we need to load some real font
; servers too. The final number in the tag defines the load order.
System.Plugins.iFontServer = crystalspace.font.server.multiplexer
System.Plugins.iFontServer.1 = crystalspace.font.server.freetype2
System.Plugins.iFontServer.2 = crystalspace.font.server.default

; Application ID string
System.ApplicationID = Peragro.Anvil

VFS.Config = vfs.cfg
