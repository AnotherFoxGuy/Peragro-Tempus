/*
    Copyright (C) 2008 Development Team of Peragro Tempus

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

//  !! This file was automatically generated by a network code generator   !!
//  !! Do not change this file since all changes will be overwritten later !!
//  !! Instead please change the source files here: peragro/data/generate  !!

#ifndef RESOURCEMESSAGES_H
#define RESOURCEMESSAGES_H

#include "netmessage.h"

namespace RESOURCE
{
  enum MESSAGES
  {
    RESOURCELIST=0,
    RESOURCEUPDATE=1
  };
}

class ResourceListMessage : public NetMessage
{
  unsigned int entityid;
  class ListResources
  {
  public:
    unsigned short resourceid;
    ptString name;
    float value;
    float maxvalue;
  };

  unsigned int resourcescount;
  ListResources* resources;


public:
  ResourceListMessage() : NetMessage(MESSAGES::RESOURCE,RESOURCE::RESOURCELIST)
  {
    resources = 0;
  }

  ~ResourceListMessage()
  {
    delete [] resources;
  }

  bool serialise(ByteStream* bs);
  void deserialise(ByteStream* bs);

  unsigned int getEntityId() const { return entityid; }
  void setEntityId(unsigned int x) { entityid = x; }

  unsigned char getResourcesCount() const { return resourcescount; }
  void setResourcesCount(unsigned char ic)
  {
    resourcescount = ic;
    delete [] resources;
    resources = new ListResources[ic];
  }

  // --- begin ListResources Getter and Setter ---

  unsigned short getResourceId(size_t i) { return resources[i].resourceid; }
  void setResourceId(size_t i, unsigned short x) { resources[i].resourceid = x; }

  ptString getName(size_t i) { return resources[i].name; }
  void setName(size_t i, ptString x) { resources[i].name = x; }

  float getValue(size_t i) { return resources[i].value; }
  void setValue(size_t i, float x) { resources[i].value = x; }

  float getMaxValue(size_t i) { return resources[i].maxvalue; }
  void setMaxValue(size_t i, float x) { resources[i].maxvalue = x; }

  // --- end ListResources Getter and Setter ---

};

class ResourceUpdateMessage : public NetMessage
{
  unsigned int entityid;
  unsigned short resourceid;
  float value;
  float maxvalue;

public:
  ResourceUpdateMessage() : NetMessage(MESSAGES::RESOURCE,RESOURCE::RESOURCEUPDATE)
  {
  }

  ~ResourceUpdateMessage()
  {
  }

  bool serialise(ByteStream* bs);
  void deserialise(ByteStream* bs);

  unsigned int getEntityId() const { return entityid; }
  void setEntityId(unsigned int x) { entityid = x; }

  unsigned short getResourceId() const { return resourceid; }
  void setResourceId(unsigned short x) { resourceid = x; }

  float getValue() const { return value; }
  void setValue(float x) { value = x; }

  float getMaxValue() const { return maxvalue; }
  void setMaxValue(float x) { maxvalue = x; }

};

#endif // RESOURCEMESSAGES_H
