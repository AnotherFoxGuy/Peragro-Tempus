/*
    Copyright (C) 2008 Development Team of Peragro Tempus

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

//  !! This file was automatically generated by a network code generator   !!
//  !! Do not change this file since all changes will be overwritten later !!
//  !! Instead please change the source files here: peragro/data/generate  !!

#ifndef ENVIRONMENTMESSAGES_H
#define ENVIRONMENTMESSAGES_H

#include "netmessage.h"

namespace ENVIRONMENT
{
  enum MESSAGES
  {
    INITTIME = 0,
    UPDATETIME = 1,
    WEATHER = 2
  };
}

class InitTimeMessage : public NetMessage
{
  unsigned int seconds;
  unsigned short epoch;
  unsigned char secondsperminute;
  unsigned char minutesperhour;
  unsigned char hoursperday;
  unsigned char daysperweek;
  unsigned char weekspermonth;
  unsigned char monthsperseason;
  unsigned char seasonsperyear;
  unsigned int gameperreal;

public:
  InitTimeMessage() : NetMessage(MESSAGES::ENVIRONMENT,ENVIRONMENT::INITTIME)
  {
  }

  ~InitTimeMessage()
  {
  }

  bool serialise(ByteStream* bs);
  void deserialise(ByteStream* bs);

  unsigned int getSeconds() const { return seconds; }
  void setSeconds(unsigned int x) { seconds = x; }

  unsigned short getEpoch() const { return epoch; }
  void setEpoch(unsigned short x) { epoch = x; }

  unsigned char getSecondsPerMinute() const { return secondsperminute; }
  void setSecondsPerMinute(unsigned char x) { secondsperminute = x; }

  unsigned char getMinutesPerHour() const { return minutesperhour; }
  void setMinutesPerHour(unsigned char x) { minutesperhour = x; }

  unsigned char getHoursPerDay() const { return hoursperday; }
  void setHoursPerDay(unsigned char x) { hoursperday = x; }

  unsigned char getDaysPerWeek() const { return daysperweek; }
  void setDaysPerWeek(unsigned char x) { daysperweek = x; }

  unsigned char getWeeksPerMonth() const { return weekspermonth; }
  void setWeeksPerMonth(unsigned char x) { weekspermonth = x; }

  unsigned char getMonthsPerSeason() const { return monthsperseason; }
  void setMonthsPerSeason(unsigned char x) { monthsperseason = x; }

  unsigned char getSeasonsPerYear() const { return seasonsperyear; }
  void setSeasonsPerYear(unsigned char x) { seasonsperyear = x; }

  unsigned int getGamePerReal() const { return gameperreal; }
  void setGamePerReal(unsigned int x) { gameperreal = x; }

};

class UpdateTimeMessage : public NetMessage
{
  unsigned int seconds;

public:
  UpdateTimeMessage() : NetMessage(MESSAGES::ENVIRONMENT,ENVIRONMENT::UPDATETIME)
  {
  }

  ~UpdateTimeMessage()
  {
  }

  bool serialise(ByteStream* bs);
  void deserialise(ByteStream* bs);

  unsigned int getSeconds() const { return seconds; }
  void setSeconds(unsigned int x) { seconds = x; }

};

class WeatherMessage : public NetMessage
{
  unsigned char weatherid;

public:
  WeatherMessage() : NetMessage(MESSAGES::ENVIRONMENT,ENVIRONMENT::WEATHER)
  {
  }

  ~WeatherMessage()
  {
  }

  bool serialise(ByteStream* bs);
  void deserialise(ByteStream* bs);

  unsigned char getWeatherId() const { return weatherid; }
  void setWeatherId(unsigned char x) { weatherid = x; }

};

#endif // ENVIRONMENTMESSAGES_H
