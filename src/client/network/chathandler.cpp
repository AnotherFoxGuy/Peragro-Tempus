/*
    Copyright (C) 2008 Development Team of Peragro Tempus

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

//  !! This file was automatically generated by a network code generator   !!
//  !! Do not change this file since all changes will be overwritten later !!
//  !! Instead please change the source files here: peragro/data/generate  !!

#include "client/network/chathandler.h"

#include "common/eventcs/eventmanager.h"
#include "common/eventcs/entityevent.h"

#include "client/pointer/pointer.h"

void ChatHandler::handleChat(GenericMessage* msg)
{
  ChatMessage pmsg;
  pmsg.deserialise(msg->getByteStream());

  using namespace PT::Events;
  EventManager* evmgr = PointerLibrary::getInstance()->getEventManager();
  {
    csRef<iEvent> pEvent = evmgr->CreateEvent("chat.say", true);
    pEvent->Add("speakerName", *pmsg.getSpeakerName()?*pmsg.getSpeakerName():"");
    pEvent->Add("volume", pmsg.getVolume());
    pEvent->Add("message", pmsg.getMessage());

    evmgr->AddEvent(pEvent);
  }

} // end handleChat

void ChatHandler::handleGroup(GenericMessage* msg)
{
  GroupMessage pmsg;
  pmsg.deserialise(msg->getByteStream());

  using namespace PT::Events;
  EventManager* evmgr = PointerLibrary::getInstance()->getEventManager();
  {
    csRef<iEvent> pEvent = evmgr->CreateEvent("chat.group", true);
    pEvent->Add("speakerName", *pmsg.getSpeakerName()?*pmsg.getSpeakerName():"");
    pEvent->Add("channel", *pmsg.getChannel()?*pmsg.getChannel():"");
    pEvent->Add("message", pmsg.getMessage());

    evmgr->AddEvent(pEvent);
  }

} // end handleGroup

